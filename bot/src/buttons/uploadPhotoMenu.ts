import { Telegraf, Context } from "telegraf";
import { fetchProfile } from "../utils/api.js";
import { Markup } from "telegraf";

export function uploadPhotoMenu(bot: Telegraf) {
    bot.hears("üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ", async (ctx: Context) => {
        const tgId = ctx.from?.id;
        const profile = await fetchProfile(tgId);

        if (!profile || !profile.images) {
            await ctx.reply("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∞–Ω–∫–µ—Ç—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, –∑–∞—Ç–µ–º –≤–µ—Ä–Ω–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ.");
            return;
        }

        const images = profile.images;

        try {
            if (images.length > 1) {
                await ctx.replyWithMediaGroup(images.slice(0, 10).map((url: string) => ({
                    type: "photo",
                    media: url
                })));
            } else if (images.length === 1) {
                await ctx.replyWithPhoto(images[0]);
            }
        } catch (error) {
            console.error(error)
        }

        const remaining = Math.max(0, 5 - images.length);

        await ctx.reply(`–£ –≤–∞—Å –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${images.length} –∏–∑ 5 —Ñ–æ—Ç–æ. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë ${remaining}!`, Markup.keyboard([
            ["üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë —Ñ–æ—Ç–æ"],
            ["üîô –ù–∞–∑–∞–¥"],
        ]).resize());
    });
} 