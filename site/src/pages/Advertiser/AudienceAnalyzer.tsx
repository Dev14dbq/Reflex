import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { FiArrowLeft, FiUsers, FiSearch, FiFilter } from 'react-icons/fi';
import styles from './AudienceAnalyzer.module.scss';

interface AudienceFilter {
  ageMin: number;
  ageMax: number;
  city: string;
  gender: string;
  goals: string[];
}

export const AudienceAnalyzer: React.FC = () => {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);
  const [audienceSize, setAudienceSize] = useState<number | null>(null);
  
  const [filters, setFilters] = useState<AudienceFilter>({
    ageMin: 18,
    ageMax: 35,
    city: '',
    gender: '',
    goals: []
  });

  const goals = [
    { id: 'sex', label: '–°–µ–∫—Å üî•' },
    { id: 'photos', label: '–û–±–º–µ–Ω —Ñ–æ—Ç–æ üì∏' },
    { id: 'ldr', label: '–û—Ç–Ω–æ—à–µ–Ω–∏—è –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ üíï' },
    { id: 'local', label: '–û—Ç–Ω–æ—à–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ ‚ù§Ô∏è' },
    { id: 'chat', label: '–û–±—â–µ–Ω–∏–µ üí¨' }
  ];

  const analyzeAudience = async () => {
    setLoading(true);
    try {
      const token = localStorage.getItem('token');
      const params = new URLSearchParams();
      
      if (filters.ageMin) params.append('ageMin', filters.ageMin.toString());
      if (filters.ageMax) params.append('ageMax', filters.ageMax.toString());
      if (filters.city) params.append('city', filters.city);
      if (filters.gender) params.append('gender', filters.gender);
      if (filters.goals.length > 0) {
        filters.goals.forEach(goal => params.append('goals', goal));
      }

      const response = await fetch(`https://spectrmod.ru/api/advertising/targeting/audience?${params}`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      
      const data = await response.json();
      setAudienceSize(data.audienceSize);
    } catch (error) {
      console.error('Failed to analyze audience:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleFilterChange = (field: keyof AudienceFilter, value: any) => {
    setFilters(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const resetFilters = () => {
    setFilters({
      ageMin: 18,
      ageMax: 35,
      city: '',
      gender: '',
      goals: []
    });
    setAudienceSize(null);
  };

  return (
    <div className={styles.audiencePage}>
      <div className={styles.header}>
        <div className={styles.headerContent}>
          <button onClick={() => navigate('/advertiser')} className={styles.backButton}>
            <FiArrowLeft size={20} />
          </button>
          <h1>–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏</h1>
        </div>
      </div>

      <div className={styles.content}>
        <div className={styles.description}>
          <p>–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –¥–ª—è –≤–∞—à–∏—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π. 
          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ —É–∑–Ω–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.</p>
        </div>

        <div className={styles.filtersSection}>
          <h2><FiFilter size={20} /> –§–∏–ª—å—Ç—Ä—ã –∞—É–¥–∏—Ç–æ—Ä–∏–∏</h2>
          
          <div className={styles.filtersGrid}>
            <div className={styles.filterGroup}>
              <h3>–í–æ–∑—Ä–∞—Å—Ç</h3>
              <div className={styles.ageInputs}>
                <input
                  type="number"
                  min="18"
                  max="65"
                  value={filters.ageMin}
                  onChange={(e) => handleFilterChange('ageMin', Number(e.target.value))}
                  placeholder="–û—Ç"
                />
                <span>‚Äî</span>
                <input
                  type="number"
                  min="18"
                  max="65"
                  value={filters.ageMax}
                  onChange={(e) => handleFilterChange('ageMax', Number(e.target.value))}
                  placeholder="–î–æ"
                />
              </div>
            </div>

            <div className={styles.filterGroup}>
              <h3>–ì–æ—Ä–æ–¥</h3>
              <input
                type="text"
                value={filters.city}
                onChange={(e) => handleFilterChange('city', e.target.value)}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞"
              />
            </div>

            <div className={styles.filterGroup}>
              <h3>–ü–æ–ª</h3>
              <select
                value={filters.gender}
                onChange={(e) => handleFilterChange('gender', e.target.value)}
              >
                <option value="">–õ—é–±–æ–π</option>
                <option value="male">–ú—É–∂—Å–∫–æ–π</option>
                <option value="female">–ñ–µ–Ω—Å–∫–∏–π</option>
              </select>
            </div>

            <div className={styles.filterGroup}>
              <h3>–ò–Ω—Ç–µ—Ä–µ—Å—ã</h3>
              <div className={styles.goalsGrid}>
                {goals.map(goal => (
                  <label key={goal.id} className={styles.goalCheckbox}>
                    <input
                      type="checkbox"
                      checked={filters.goals.includes(goal.id)}
                      onChange={(e) => {
                        if (e.target.checked) {
                          handleFilterChange('goals', [...filters.goals, goal.id]);
                        } else {
                          handleFilterChange('goals', filters.goals.filter(g => g !== goal.id));
                        }
                      }}
                    />
                    {goal.label}
                  </label>
                ))}
              </div>
            </div>
          </div>

          <div className={styles.filterActions}>
            <button onClick={resetFilters} className={styles.resetButton}>
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </button>
            <button 
              onClick={analyzeAudience} 
              disabled={loading}
              className={styles.analyzeButton}
            >
              <FiSearch size={16} />
              {loading ? '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...' : '–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏—é'}
            </button>
          </div>
        </div>

        {audienceSize !== null && (
          <div className={styles.resultSection}>
            <div className={styles.resultCard}>
              <div className={styles.resultIcon}>
                <FiUsers size={32} />
              </div>
              <div className={styles.resultContent}>
                <h2>–†–∞–∑–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏</h2>
                <div className={styles.audienceNumber}>
                  {audienceSize.toLocaleString()}
                </div>
                <p>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º</p>
              </div>
            </div>

            <div className={styles.insights}>
              <h3>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
              <ul>
                {audienceSize < 1000 && (
                  <li>–ê—É–¥–∏—Ç–æ—Ä–∏—è —Å–ª–∏—à–∫–æ–º –º–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ —Ä–∞–º–∫–∏ –∏–ª–∏ —É–±—Ä–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã.</li>
                )}
                {audienceSize > 100000 && (
                  <li>–û—á–µ–Ω—å –±–æ–ª—å—à–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞ –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.</li>
                )}
                {audienceSize >= 1000 && audienceSize <= 100000 && (
                  <li>–û—Ç–ª–∏—á–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏!</li>
                )}
                <li>–î–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–π.</li>
                <li>–ù–∞—á–Ω–∏—Ç–µ —Å –Ω–µ–±–æ–ª—å—à–æ–≥–æ –±—é–¥–∂–µ—Ç–∞ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –µ–≥–æ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ö–æ—Ä–æ—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.</li>
              </ul>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}; 